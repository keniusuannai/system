<% layout('layout.html') %>
<div class="content container">
    <div class="row">
        <div class="col-lg-6">
            <div class="widget">
                <div class="widget-header"><i class="icon-table"></i>
                    <h3>cpu</h3>
                </div>
                <div class="widget-content">
                    <div class="body">
                        <div id="cpu" style="width: 100%;height:300px;"></div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="widget">
                <div class="widget-header"><i class="icon-table"></i>
                    <h3>内存</h3>
                </div>
                <div class="widget-content">
                    <div class="body">
                        <div id="mem" style="width: 100%;height:300px;"></div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="widget">
                <div class="widget-header"><i class="icon-table"></i>
                    <h3>磁盘</h3>
                </div>
                <div class="widget-content">
                    <div class="body">
                        <div id="device" style="width: 100%;height:300px;"></div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="widget">
                <div class="widget-header"><i class="icon-table"></i>
                    <h3>网络</h3>
                </div>
                <div class="widget-content">
                    <div class="body">
                        <div id="network" style="width: 100%;height:300px;"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>
<script src="/js/echarts.min.js"></script>
<script>
    var performance = {
        cpu: {
            chart: echarts.init(document.getElementById('cpu')),
            data: new Array(100),
        },
        mem: {
            chart: echarts.init(document.getElementById('mem')),
            data: new Array(100),
        },
        device: {
            chart: echarts.init(document.getElementById('device')),
            data: new Array(100),
        },
        network: {
            chart: echarts.init(document.getElementById('network')),
            data: new Array(100),
        },
        timer: null,
        option: {
            title: {
                subtext: '%使用率',
            },
            xAxis: {
                splitLine: {
                    show: false
                },
                data: []
            },
            yAxis: {
                name: '利用率：...',
                nameLocation: 'start',
                nameTextStyle: {
                    fontSize: '18',
                    color: '#fff'
                },
                type: "value",
            },
            series: [{
                name: 'CPU利用率',
                type: 'line',
                showSymbol: false,
                hoverAnimation: false,
                animation: false,
                data: this.data
            }]

        },
        init: function () {
            this.cpu.chart.setOption(this.option);
            this.mem.chart.setOption(this.option);
            this.device.chart.setOption(this.option);
            this.network.chart.setOption(this.option);
            this.run();

        },
        run: function () {
            var _this = this;
            this.timer = setInterval(function () {
                _this.getData();
                _this.renderCpu();
                _this.renderMem();
                _this.renderDevice();
                _this.renderNetwork();
            }, 1000);
        },
        getData: function () {
            $.post('/admin/performance', function (res) {
                if (performance.cpu.data.length > 10) {
                    performance.cpu.data.shift();
                    performance.mem.data.shift();
                    performance.device.data.shift();
                    performance.network.data.shift();
                }
                performance.cpu.data.push(res.cpu);
                performance.mem.data.push(res.mem);
                performance.device.data.push(res.device);
                performance.network.data.push(res.network);
            });
        },
        renderCpu: function () {
            var _this = this;
            var persont = Math.round(_this.cpu.data[_this.cpu.data.length - 1] * 100);
            _this.cpu.chart.setOption({
                yAxis: {
                    name: persont ? '利用率：' + persont + '%' : '利用率：...'
                },
                series: [{
                    data: _this.cpu.data
                }]
            });
        },
        renderMem: function () {
            var _this = this;
            var persont = Math.round(_this.mem.data[_this.mem.data.length - 1] * 100);
            _this.mem.chart.setOption({
                yAxis: {
                    name: persont ? '利用率：' + persont + '%' : '利用率：...'
                },
                series: [{
                    data: _this.mem.data
                }]
            });
        },
        renderDevice: function () {
            var _this = this;
            var persont = Math.round(_this.device.data[_this.device.data.length - 1] * 100);
            _this.device.chart.setOption({
                yAxis: {
                    name: persont ? '利用率：' + persont + '%' : '利用率：...'
                },
                series: [{
                    data: _this.device.data
                }]
            });
        },
        renderNetwork: function () {
            var _this = this;
            var persont = Math.round(_this.network.data[_this.network.data.length - 1] * 100);
            _this.network.chart.setOption({
                yAxis: {
                    name: persont ? '利用率：' + persont + '%' : '利用率：...'
                },
                series: [{
                    data: _this.network.data
                }]
            });
        }
    };
    performance.init();

</script>